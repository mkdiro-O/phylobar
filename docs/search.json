[{"path":[]},{"path":"http://mkdiro-o.github.io/phylobar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/atlas.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Tipping Points in the Atlas 1006 Dataset","text":"begin loading mouse diet study data, stored remotely can loaded R phyloseq object. Next, load atlas1006 dataset. simplicity, focus samples r DNA extraction method transform abundances compositional form (sample sums 1). naive attempt build taxonomy-based tree can fail, duplicate names across different levels taxonomy may result loops. address , add level-specific prefixes (e.g., p_ phylum, f_ family), ensuring ancestor descendant nodes unique labels. valid tree abundance matrix, can generate phylobar plot. , samples arranged along x-axis, stacked bars representing taxonomic abundances, aligned corresponding branches tree. full dataset complex, can simplify visualization subsampling representative samples. preserves main conclusions reducing visual clutter.","code":"data(atlas1006) pseq3 <- atlas1006 |>   subset_samples(DNA_extraction_method == \"r\") |>   transform(transform = \"compositional\") tree <- taxonomy_to_tree(tax_table(pseq3)) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 128  #> Found number of nodes: m = 23  #>   FATAL: nodes and tips should appear only once in the 2nd column of 'edge' #>   FATAL: the root node should not appear in the 2nd column of 'edge' #> Done. taxa <- tax_table(pseq3) taxa <- cbind(Kingdom = \"Bacteria\", taxa) taxa <- add_prefix(taxa)  tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 130  #> Found number of nodes: m = 31  #> Done. x <- t(otu_table(pseq3)) phylobar(x, tree, sample_show_all = FALSE, rel_width = 0.2) x_sub <- subset_cluster(x) x_sub <- x_sub[, colSums(x_sub) > 0]  leaves_to_keep <- intersect(tree$tip.label, colnames(x_sub)) filtered_tree <- drop.tip(tree, setdiff(tree$tip.label, leaves_to_keep)) phylobar(x_sub, filtered_tree)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/atlas.html","id":"interpretation","dir":"Articles","previous_headings":"","what":"Interpretation","title":"Tipping Points in the Atlas 1006 Dataset","text":"many interesting patterns atlas dataset revealing distinct patterns human intestinal. example, Enterobacter aerogenes appears across broad range samples, generally low relative abundance. one sample shows notable representation, creating narrow band stacked barplot. patchy distribution characteristic opportunistic conditionally rare taxa, may present many individuals rarely dominate community structure. patterns previously described examples bimodal “tipping element” behavior, taxon abundant hosts nearly absent others. (https://pmc.ncbi.nlm.nih.gov/articles/PMC4102116/pdf/ncomms5344.pdf)  Next, screenshot highlights dominance Firmicutes (yellow) Bacteroidetes (purple) human gut microbiome. two phyla prevalent across nearly samples, relative proportions vary widely. samples Firmicutes-dominant, others Bacteroidetes-dominant. variability reflects complex interplay host genetics, diet, environmental factors shape gut microbiome.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/atlas.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Tipping Points in the Atlas 1006 Dataset","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] microbiome_1.30.0 ggplot2_4.0.0     phylobar_0.99.0   phangorn_2.12.1   #> [5] purrr_1.1.0       htmlwidgets_1.6.4 phyloseq_1.52.0   ape_5.8-1         #>  #> loaded via a namespace (and not attached): #>  [1] ade4_1.7-23             tidyselect_1.2.1        dplyr_1.1.4             #>  [4] farver_2.1.2            Biostrings_2.76.0       S7_0.2.0                #>  [7] fastmap_1.2.0           digest_0.6.37           lifecycle_1.0.4         #> [10] cluster_2.1.8.1         survival_3.8-3          magrittr_2.0.4          #> [13] compiler_4.5.1          rlang_1.1.6             sass_0.4.10             #> [16] tools_4.5.1             igraph_2.1.4            yaml_2.3.10             #> [19] data.table_1.17.8       knitr_1.50              plyr_1.8.9              #> [22] RColorBrewer_1.1-3      Rtsne_0.17              withr_3.0.2             #> [25] BiocGenerics_0.54.0     desc_1.4.3              grid_4.5.1              #> [28] stats4_4.5.1            multtest_2.64.0         biomformat_1.36.0       #> [31] Rhdf5lib_1.30.0         scales_1.4.0            iterators_1.0.14        #> [34] MASS_7.3-65             cli_3.6.5               rmarkdown_2.30          #> [37] vegan_2.7-1             crayon_1.5.3            ragg_1.5.0              #> [40] generics_0.1.4          httr_1.4.7              reshape2_1.4.4          #> [43] cachem_1.1.0            rhdf5_2.52.1            stringr_1.5.2           #> [46] splines_4.5.1           parallel_4.5.1          XVector_0.48.0          #> [49] vctrs_0.6.5             Matrix_1.7-4            jsonlite_2.0.0          #> [52] IRanges_2.42.0          S4Vectors_0.46.0        systemfonts_1.2.3       #> [55] foreach_1.5.2           tidyr_1.3.1             jquerylib_0.1.4         #> [58] glue_1.8.0              pkgdown_2.1.3           codetools_0.2-20        #> [61] stringi_1.8.7           gtable_0.3.6            GenomeInfoDb_1.44.3     #> [64] UCSC.utils_1.4.0        quadprog_1.5-8          tibble_3.3.0            #> [67] pillar_1.11.1           htmltools_0.5.8.1       rhdf5filters_1.20.0     #> [70] GenomeInfoDbData_1.2.14 R6_2.6.1                textshaping_1.0.3       #> [73] evaluate_1.0.5          lattice_0.22-7          Biobase_2.68.0          #> [76] bslib_0.9.0             Rcpp_1.1.0              fastmatch_1.1-6         #> [79] nlme_3.1-168            permute_0.9-8           mgcv_1.9-3              #> [82] xfun_0.53               fs_1.6.6                pkgconfig_2.0.3"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"block loads relevant packages. use tidyverse packages preprocessing. Next, load data, organized phyloseq object slots phylogenetic tree, sample metadata, sample-level abundances.","code":"library(ape) library(dplyr) library(phylobar) library(tibble) library(tidyr) f <- tempfile() download.file(\"zenodo.org/records/17179980/files/zhang2023-ps.rds\", f) # will be replaced by ExperimentHub package, CancerOralMicrobiome ps <- readRDS(f)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"sample-level-analysis","dir":"Articles","previous_headings":"","what":"Sample-Level Analysis","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"now begin sample-level analysis. original dataset includes 1103 samples. simplify visualization, subset 100 representative samples chosen clustering K=100K = 100, implemented subset_cluster. subsetted data, rows correspond representative samples columns correspond OTU abundances. filter OTUs, One issue two OTUs now never appear among visualized samples. Let’s add small pseudocount make sure leaf node least mass.","code":"keep_ix <- rowMeans(otu_table(ps) > 0) > 0.01 ps <- prune_taxa(taxa_names(ps)[keep_ix], ps) x_mat <- t(otu_table(ps)) x_mat <- subset_cluster(x_mat, k = 100) x_mat[1, which(colSums(x_mat) == 0)] <- .00001 x_mat <- x_mat / rowSums(x_mat)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"sample-order","dir":"Articles","previous_headings":"Sample-Level Analysis","what":"Sample order","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"default, phylobar orders samples stacked bar plot according sample similarity. creates clean visualizations, fails address primary interest: variation community composition relates mucositis. Therefore, instead order samples mucositis severity patients gathered. block computes patient-level averages mucositis severity organizes samples first patient severity , within patient, time relative treatment initiation. Although ordering includes every sample dataset, plots use representative subset clustering step. finalize ordering subsetting sample order accordingly.","code":"sample_order <- data.frame(sample_data(ps)) |>     rownames_to_column(\"sample\") |>     group_by(id) |>     mutate(mean_mucositis = mean(mucositis)) |>     ungroup() |>     arrange(mean_mucositis, timediff) |>     pull(sample) row_ix <- sample_order[sample_order %in% rownames(x_mat)] col_ix <- hclust(dist(t(x_mat)))$order"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"visualization","dir":"Articles","previous_headings":"Sample-Level Analysis","what":"Visualization","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"reorganized matrix used input phylobar. Samples right stacked bar severe mucositis average. use argument sample_show_fall = FALSE use custom ordering defined . sample_label_space = 75 argument gives bit extra vertical space sample labels, bit longer usual.","code":"phylobar(     x_mat[row_ix, col_ix],     phy_tree(ps),     width = 900,     hclust_order = FALSE,     sample_font_size = 6,     sample_label_space = 75 )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"interpretation","dir":"Articles","previous_headings":"Sample-Level Analysis","what":"Interpretation","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"highlight interesting findings using screenshots interactive plots. example, tallest bar far left one 16 (1103) samples 10 reads OTU 200, fact dominated OTU 200. suggests possible contamination quality-control issues. questionable OTU seems dominate one samples. Next, highlight two phylogenetic subtrees explore associations mucositis severity. subtree labeled purple (descendants node 0.859.2), higher abundance appears associated lower severity – purples bars larger left hand side stacked barplot. contrast, green subtree (descendants node 0.948.4), higher abundances associated higher severity. high-level phylogenetic groups seem associated mucositis severity. Next, collapse subtrees, resulting smaller tree layout letting us focus remaining phylogenetic groups. highlight bar (red) large values one severe mucositis patients. associated strain, OTU0910, shows high abundance relatively small number patients, patients tend experience worse average mucositis. collapsing parts tree, can study patterns isolated leaves without losing context entire tree.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"temporal-analysis","dir":"Articles","previous_headings":"","what":"Temporal Analysis","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"example visualizes stacked bars sample. However, might interested temporal trends averaged across samples—example, microbiome community structures change course treatment among people vs. less severe mucositis. next part, ’ll create streamgraph alternative stacked bars , stream defined time relative start treatment.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"streamgraph-helpers","dir":"Articles","previous_headings":"Temporal Analysis","what":"Streamgraph helpers","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"helper function computes kernel smoothing abundances species time. consider windows size two days take average across patients within window. final Gaussian kernel averaging applied smooth across adjacent windows. block converts original phyloseq object pair data frames, since format easier manipulate dplyr. also compute average mucositis score individual, identified ID column. derived feature useful understanding disease severity. alternative analysis also consider latent class grouping, discussed Zhang et al. (2023).","code":"smooth_time_series <- function(df, time_col = \"timediff\", pseudocount = 1, round_degree = 2, bandwidth = 5) {     # Round timediffs     df <- df |>         mutate(time_bin = round_degree * round(.data[[time_col]] / round_degree)) |>         arrange(time_bin) |>         group_by(time_bin) |>         summarise(             value = (sum(value) + pseudocount) / (n() + pseudocount)         )      # Fill gaps with 0     tibble(time_bin = seq(min(df$time_bin), max(df$time_bin), by = round_degree)) |>         left_join(df, by = \"time_bin\") |>         mutate(value = replace_na(value, 0)) |>         reframe(             smooth_value = ksmooth(time_bin, value, \"normal\", bandwidth, n.points = n())$y,             time_bin = ksmooth(time_bin, value, \"normal\", bandwidth, n.points = n())$x         ) } x_mat <- t(otu_table(ps)) |>     data.frame() |>     rownames_to_column(\"sample\") metadata <- sample_data(ps) |>     data.frame() |>     rownames_to_column(\"sample\") |>     group_by(id) |>     mutate(mean_mucositis = mean(mucositis))"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"input-data-preparation","dir":"Articles","previous_headings":"Temporal Analysis","what":"Input data preparation","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"now reshape data long-format can apply smoothing function separately across species (feature data ) disease severity level. Several patients late follow-measurements, focus within 55 days treatment. result, x_smooth, applies kernel smoothing separately mroe vs. less severe mucositis cases, combines results single matrix—first grouped severity, sorted time. allows us study two trends within single stacked bar plot.","code":"x_long_format <- x_mat |>     left_join(metadata, by = \"sample\") |>     filter(between(timediff, -5, 55)) |>     select(id, timediff, mean_mucositis, starts_with(\"OTU\")) |>     pivot_longer(starts_with(\"O\"), names_to = \"feature\", values_to = \"value\")  x_smooth <- x_long_format |>     group_by(feature, severity = if_else(mean_mucositis > 3.5, \"S\", \"NS\")) |>     group_modify(~ smooth_time_series(.x)) |>     unite(row, time_bin, severity, sep = \"\") |>     pivot_wider(names_from = feature, values_from = smooth_value) |>     column_to_rownames(\"row\") x_smooth <- x_smooth / rowSums(x_smooth)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"visualization-1","dir":"Articles","previous_headings":"Temporal Analysis","what":"Visualization","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"can now create phylobar visualization, using phylogenetic tree . x-axis labels indicate severity time window. severe cases shown left side figure.","code":"phylobar(     x_smooth,     phy_tree(ps),     width = 900,     hclust_order = FALSE )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"interpretation-1","dir":"Articles","previous_headings":"Temporal Analysis","what":"Interpretation","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"Browsing across different phylogenetic groups, see descendants 0.538 abundant early time points patients severe mucositis. higher lower severity groups, however, abundance subtree decreases time. contrast, OTU0911 remains roughly stable across groups. final time windows lower severity group, appears become slightly abundant, though may artifact averaging smaller number samples available 55 days treatment start. overview phylobar streamgraph, showing high-level taxonomic groups differential trajectories across high low severity groups. Interacting next stacked bars, can identify several individual OTUs interest. example, OTU0307 (highlighted purple) becomes abundant later time points, especially among patients low mucositis. represent candidate species designing therapy aimed managing mucositis. OTU0297 (green) appears briefly midway treatment recovery among low-severity cases, illustrating transient effects can arise microbiome data. Finally, OTU0943 appears slightly abundant among lower severity, though effect tentative. zoomed phylobar streamgraph, focusing OTUs interest. observations emerged minutes interacting phylobar visualization. highlights exploratory potential approach shows dataset can viewed multiple phylogenetic resolutions uncover biologically meaningful trends.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/cancer_oral_microbiome.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Oral Microbiome and Mucositis Severity in Cancer Patients","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #>  [1] tidyr_1.3.1       tibble_3.3.0      phylobar_0.99.0   phangorn_2.12.1   #>  [5] purrr_1.1.0       htmlwidgets_1.6.4 phyloseq_1.52.0   dplyr_1.1.4       #>  [9] ape_5.8-1         BiocStyle_2.36.0  #>  #> loaded via a namespace (and not attached): #>  [1] ade4_1.7-23             tidyselect_1.2.1        farver_2.1.2            #>  [4] Biostrings_2.76.0       S7_0.2.0                fastmap_1.2.0           #>  [7] digest_0.6.37           lifecycle_1.0.4         cluster_2.1.8.1         #> [10] survival_3.8-3          magrittr_2.0.4          compiler_4.5.1          #> [13] rlang_1.1.6             sass_0.4.10             tools_4.5.1             #> [16] igraph_2.1.4            yaml_2.3.10             data.table_1.17.8       #> [19] knitr_1.50              plyr_1.8.9              RColorBrewer_1.1-3      #> [22] withr_3.0.2             BiocGenerics_0.54.0     desc_1.4.3              #> [25] grid_4.5.1              stats4_4.5.1            multtest_2.64.0         #> [28] biomformat_1.36.0       Rhdf5lib_1.30.0         ggplot2_4.0.0           #> [31] scales_1.4.0            iterators_1.0.14        MASS_7.3-65             #> [34] cli_3.6.5               rmarkdown_2.30          vegan_2.7-1             #> [37] crayon_1.5.3            ragg_1.5.0              generics_0.1.4          #> [40] httr_1.4.7              reshape2_1.4.4          cachem_1.1.0            #> [43] rhdf5_2.52.1            stringr_1.5.2           splines_4.5.1           #> [46] parallel_4.5.1          BiocManager_1.30.26     XVector_0.48.0          #> [49] vctrs_0.6.5             Matrix_1.7-4            jsonlite_2.0.0          #> [52] bookdown_0.44           IRanges_2.42.0          S4Vectors_0.46.0        #> [55] systemfonts_1.2.3       foreach_1.5.2           jquerylib_0.1.4         #> [58] glue_1.8.0              pkgdown_2.1.3           codetools_0.2-20        #> [61] stringi_1.8.7           gtable_0.3.6            GenomeInfoDb_1.44.3     #> [64] UCSC.utils_1.4.0        quadprog_1.5-8          pillar_1.11.1           #> [67] htmltools_0.5.8.1       rhdf5filters_1.20.0     GenomeInfoDbData_1.2.14 #> [70] R6_2.6.1                textshaping_1.0.3       evaluate_1.0.5          #> [73] lattice_0.22-7          Biobase_2.68.0          bslib_0.9.0             #> [76] Rcpp_1.1.0              fastmatch_1.1-6         nlme_3.1-168            #> [79] permute_0.9-8           mgcv_1.9-3              xfun_0.53               #> [82] fs_1.6.6                pkgconfig_2.0.3"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Customizing Style in Phylobar","text":"Phylobar draws phylogenetic tree alongside stacked bar chart. vignette shows customize visual style: text sizes, color palettes, layout ratios, legend placement, . use small random dataset: function signature key styling parameters explore: palette: colors used painted subtrees (stacked bars) width, height: widget size pixels sample_font_size, sample_label_margin, sample_label_space sample_magnify, sample_show_all rel_width, rel_height, rel_space legend_mode, legend_x_start, legend_spacing hclust_order: optional hierarchical reordering rows/columns Internally, phylobar() ensures tree node labels abundance matrix row/column names. ’re missing, helper check_inputs() creates sensible defaults (e.g., sample_1, sample_2).","code":"library(ape) library(phylobar)  set.seed(1) tree <- rtree(20) samples <- matrix(rpois(100 * 20, 1), nrow = 100, ncol = 20)  phylobar(samples, tree)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"color-pallete","dir":"Articles","previous_headings":"","what":"Color Pallete","title":"Customizing Style in Phylobar","text":"palette provided, phylobar uses default set six colors. possible supply vector hex colors R color names.","code":"# Custom qualitative palette (as many colors as you want; repeats if needed) my_palette <- c(     \"#4E79A7\", \"#F28E2B\", \"#E15759\",     \"#76B7B2\", \"#59A14F\", \"#EDC948\" ) phylobar(samples, tree, palette = my_palette)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"widget-size","dir":"Articles","previous_headings":"","what":"Widget Size","title":"Customizing Style in Phylobar","text":"default widget adapts container. Fix size :","code":"phylobar(samples, tree,     width = 800,     height = 500 )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"sample-label-styling","dir":"Articles","previous_headings":"","what":"Sample Label Styling","title":"Customizing Style in Phylobar","text":"Control sample label font size, spacing, hover magnification.","code":"phylobar(samples, tree,     width = 800, height = 500,     sample_font_size = 10,     sample_label_margin = 10, # space between labels and bars     sample_label_space = 100, # reserved margin for labels     sample_magnify = 1.3, # how much to enlarge labels on hover     sample_show_all = TRUE )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"tree-bar-layout-ratio","dir":"Articles","previous_headings":"","what":"Tree-bar Layout Ratio","title":"Customizing Style in Phylobar","text":"Change much horizontal vertical space tree occupies: rel_width: fraction total width reserved tree panel (default 0.4) rel_height: fraction total height tree panel (default 0.85) rel_space: pixels tree bar panels (default 10)","code":"phylobar(     samples, tree,     width = 800, height = 500,     sample_label_space = 100,     sample_magnify = 1.3,     rel_width = 0.2, # narrower tree     rel_height = 0.70, # shorter tree (more space for legend)     rel_space = 14 # larger gap between panels )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"legend-placement","dir":"Articles","previous_headings":"","what":"Legend Placement","title":"Customizing Style in Phylobar","text":"Choose whether painted subtree labels appear separate legend (legend_mode = TRUE, default) placed inside tree (legend_mode = FALSE). legend_x_start legend_spacing can also adjusted control legen position.","code":"# Legend below the tree (default) phylobar(     samples, tree,     width = 800, height = 500,     sample_label_space = 100,     sample_magnify = 1.3,     legend_mode = TRUE,     legend_x_start = 20, # horizontal start in pixels     legend_spacing = 20 # vertical spacing between legend items in pixels ) # Put labels inside the tree instead of a separate legend phylobar(     samples, tree,     width = 800, height = 500,     sample_label_space = 100,     sample_magnify = 1.3,     legend_mode = FALSE,     legend_x_start = 20, # horizontal start in pixels     legend_spacing = 20 # vertical spacing between legend items in pixels )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"optional-hierarchical-reordering","dir":"Articles","previous_headings":"","what":"Optional Hierarchical Reordering","title":"Customizing Style in Phylobar","text":"hclust_order = TRUE (default) reorders samples/features hierarchical clustering, can make patterns visible. Turn preserve original order:","code":"# Keep the input order as-is phylobar(     samples, tree,     width = 800, height = 500,     sample_label_space = 100,     sample_magnify = 1.3,     hclust_order = FALSE )"},{"path":"http://mkdiro-o.github.io/phylobar/articles/customizing_files.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Customizing Style in Phylobar","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] phylobar_0.99.0   phangorn_2.12.1   purrr_1.1.0       htmlwidgets_1.6.4 #> [5] phyloseq_1.52.0   ape_5.8-1         #>  #> loaded via a namespace (and not attached): #>  [1] fastmatch_1.1-6         gtable_0.3.6            xfun_0.53               #>  [4] bslib_0.9.0             ggplot2_4.0.0           rhdf5_2.52.1            #>  [7] Biobase_2.68.0          lattice_0.22-7          quadprog_1.5-8          #> [10] rhdf5filters_1.20.0     vctrs_0.6.5             tools_4.5.1             #> [13] generics_0.1.4          biomformat_1.36.0       stats4_4.5.1            #> [16] parallel_4.5.1          tibble_3.3.0            cluster_2.1.8.1         #> [19] pkgconfig_2.0.3         Matrix_1.7-4            data.table_1.17.8       #> [22] RColorBrewer_1.1-3      S7_0.2.0                desc_1.4.3              #> [25] S4Vectors_0.46.0        lifecycle_1.0.4         GenomeInfoDbData_1.2.14 #> [28] compiler_4.5.1          farver_2.1.2            stringr_1.5.2           #> [31] textshaping_1.0.3       Biostrings_2.76.0       codetools_0.2-20        #> [34] permute_0.9-8           GenomeInfoDb_1.44.3     htmltools_0.5.8.1       #> [37] sass_0.4.10             yaml_2.3.10             pillar_1.11.1           #> [40] pkgdown_2.1.3           crayon_1.5.3            jquerylib_0.1.4         #> [43] MASS_7.3-65             cachem_1.1.0            vegan_2.7-1             #> [46] iterators_1.0.14        foreach_1.5.2           nlme_3.1-168            #> [49] tidyselect_1.2.1        digest_0.6.37           stringi_1.8.7           #> [52] dplyr_1.1.4             reshape2_1.4.4          splines_4.5.1           #> [55] ade4_1.7-23             fastmap_1.2.0           grid_4.5.1              #> [58] cli_3.6.5               magrittr_2.0.4          survival_3.8-3          #> [61] UCSC.utils_1.4.0        scales_1.4.0            rmarkdown_2.30          #> [64] XVector_0.48.0          httr_1.4.7              multtest_2.64.0         #> [67] igraph_2.1.4            ragg_1.5.0              evaluate_1.0.5          #> [70] knitr_1.50              IRanges_2.42.0          mgcv_1.9-3              #> [73] rlang_1.1.6             Rcpp_1.1.0              glue_1.8.0              #> [76] BiocGenerics_0.54.0     jsonlite_2.0.0          R6_2.6.1                #> [79] Rhdf5lib_1.30.0         plyr_1.8.9              systemfonts_1.2.3       #> [82] fs_1.6.6"},{"path":"http://mkdiro-o.github.io/phylobar/articles/diet_analysis.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Differences in the Community Composition due to Diet","text":"begin loading mouse diet study data, stored remotely can loaded R phyloseq object. prepare data visualization, first convert phyloseq object MicrobiomeStat object using mStat_convert_phyloseq_to_data_obj(). enables us apply DESeq2 normalization, corrects sequencing depth differences across samples. transpose normalized feature matrix rows correspond taxa columns samples, expected phylobar(). Unlike relative-abundance normalization, DESeq2 constrain sample totals equal one. distinction highlights flexibility functions, since phylobar can accommodate compositional non-compositional inputs. normalization, transpose feature matrix rows correspond taxa columns samples, required phylobar(). Next, construct taxonomy-based tree available annotations. ensure ancestor descendant nodes remain uniquely identifiable, add prefixes taxonomic level (e.g., p_ phylum, f_ family). Without step, different levels can share names, prevent taxonomy converted valid tree. prefixed taxonomy table passed taxonomy_to_tree(), producing hierarchical tree serve backbone visualization. point, two aligned objects ready visualization: normalized abundance matrix (x) taxonomy-derived tree (tree). now pass objects phylobar(). resulting plot shows stacked bar charts taxa abundances, aligned hierarchical tree structure.","code":"data(\"dietswap\", package = \"microbiome\") diet_temp <- subset_samples(dietswap, timepoint == 1) diet <- subset_taxa(diet_temp, taxa_sums(diet_temp) > 0) diet_mstat <- mStat_convert_phyloseq_to_data_obj(diet) diet_mstat <- mStat_normalize_data(diet_mstat, \"DESeq\") x <- t(diet_mstat$data.obj.norm$feature.tab) taxa <- tax_table(diet) |>     phylobar::add_prefix() taxa <- cbind(Kingdom = \"k_Bacteria\", taxa) tree <- taxonomy_to_tree(taxa) phylobar(x, tree, width = 800)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/diet_analysis.html","id":"interpretation","dir":"Articles","previous_headings":"","what":"Interpretation","title":"Differences in the Community Composition due to Diet","text":"showcase several notable patterns using screenshots interactive plots: mice display co-dominance Firmicutes (purple) Bacteroidetes (teal), sample_52 shows clear Firmicutes dominance, underscoring dietary interventions can shift balance two phyla.  Next, observe abundance Clostridium cluster IV family acros samples. variability abundance suggests Clostridium cluster IV widespread, contribution community structure differs across individuals conditions.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/diet_analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Differences in the Community Composition due to Diet","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] MicrobiomeStat_1.4.1        tibble_3.3.0                #>  [3] rlang_1.1.6                 DESeq2_1.48.2               #>  [5] SummarizedExperiment_1.38.1 Biobase_2.68.0              #>  [7] MatrixGenerics_1.20.0       matrixStats_1.5.0           #>  [9] GenomicRanges_1.60.0        GenomeInfoDb_1.44.3         #> [11] IRanges_2.42.0              S4Vectors_0.46.0            #> [13] BiocGenerics_0.54.0         generics_0.1.4              #> [15] phylobar_0.99.0             phangorn_2.12.1             #> [17] purrr_1.1.0                 ape_5.8-1                   #> [19] htmlwidgets_1.6.4           phyloseq_1.52.0             #> [21] BiocStyle_2.36.0            #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3      jsonlite_2.0.0          magrittr_2.0.4          #>   [4] farver_2.1.2            nloptr_2.2.1            rmarkdown_2.30          #>   [7] fs_1.6.6                ragg_1.5.0              vctrs_0.6.5             #>  [10] multtest_2.64.0         minqa_1.2.8             ggtree_3.16.3           #>  [13] htmltools_0.5.8.1       S4Arrays_1.8.1          Rhdf5lib_1.30.0         #>  [16] SparseArray_1.8.1       rhdf5_2.52.1            gridGraphics_0.5-1      #>  [19] sass_0.4.10             bslib_0.9.0             desc_1.4.3              #>  [22] plyr_1.8.9              cachem_1.1.0            igraph_2.1.4            #>  [25] lifecycle_1.0.4         iterators_1.0.14        pkgconfig_2.0.3         #>  [28] Matrix_1.7-4            R6_2.6.1                fastmap_1.2.0           #>  [31] clue_0.3-66             GenomeInfoDbData_1.2.14 rbibutils_2.3           #>  [34] digest_0.6.37           numDeriv_2016.8-1.1     aplot_0.2.9             #>  [37] ggnewscale_0.5.2        spatial_7.3-18          patchwork_1.3.2         #>  [40] textshaping_1.0.3       vegan_2.7-1             httr_1.4.7              #>  [43] abind_1.4-8             mgcv_1.9-3              compiler_4.5.1          #>  [46] withr_3.0.2             pander_0.6.6            S7_0.2.0                #>  [49] BiocParallel_1.42.2     MASS_7.3-65             rappdirs_0.3.3          #>  [52] DelayedArray_0.34.1     biomformat_1.36.0       fBasics_4041.97         #>  [55] permute_0.9-8           tools_4.5.1             glue_1.8.0              #>  [58] quadprog_1.5-8          stabledist_0.7-2        nlme_3.1-168            #>  [61] rhdf5filters_1.20.0     grid_4.5.1              cluster_2.1.8.1         #>  [64] reshape2_1.4.4          ade4_1.7-23             gtable_0.3.6            #>  [67] tidyr_1.3.1             data.table_1.17.8       XVector_0.48.0          #>  [70] rmutil_1.1.10           foreach_1.5.2           pillar_1.11.1           #>  [73] stringr_1.5.2           yulab.utils_0.2.1       splines_4.5.1           #>  [76] dplyr_1.1.4             treeio_1.32.0           lattice_0.22-7          #>  [79] survival_3.8-3          tidyselect_1.2.1        locfit_1.5-9.12         #>  [82] Biostrings_2.76.0       knitr_1.50              reformulas_0.4.1        #>  [85] bookdown_0.44           ggtreeExtra_1.18.1      xfun_0.53               #>  [88] timeDate_4041.110       stringi_1.8.7           UCSC.utils_1.4.0        #>  [91] lazyeval_0.2.2          ggfun_0.2.0             yaml_2.3.10             #>  [94] boot_1.3-32             evaluate_1.0.5          codetools_0.2-20        #>  [97] timeSeries_4041.111     BiocManager_1.30.26     ggplotify_0.1.3         #> [100] cli_3.6.5               rpart_4.1.24            systemfonts_1.2.3       #> [103] Rdpack_2.6.4            jquerylib_0.1.4         Rcpp_1.1.0              #> [106] stable_1.1.6            parallel_4.5.1          modeest_2.4.0           #> [109] pkgdown_2.1.3           ggplot2_4.0.0           lme4_1.1-37             #> [112] tidytree_0.4.6          lmerTest_3.1-3          scales_1.4.0            #> [115] statip_0.2.3            crayon_1.5.3            fastmatch_1.1-6"},{"path":"http://mkdiro-o.github.io/phylobar/articles/exporting.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Exporting to Vector Graphics Format","text":"identify interesting view, can share others? First, press Escape key freeze view, doesn’t respond mouse interactions. , always take screenshot, want preserve details (add notes within figure ), instead export Scalable Graphics (SVG), discussed vignette. work, need use Google Chrome install bookmarklet SVG Crowbar 2. ’ll illustrate process using simple randomly generatred tree .","code":"library(ape) library(phylobar) #> Loading required package: phyloseq #> Loading required package: htmlwidgets #> Loading required package: purrr #> Loading required package: phangorn  tree <- rtree(20) samples <- matrix(rpois(100 * 20, 1), 100, 20) phylobar(samples, tree, width=800)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/exporting.html","id":"step-1-exporting-from-browser","dir":"Articles","previous_headings":"","what":"Step 1: Exporting from Browser","title":"Exporting to Vector Graphics Format","text":"bookmarklet installed, can press download phylobar figures Quarto Rmarkdown notebook. recording , pressed Escape painting blue subtree. move bookmarks bar without changing view. Clicking bookmarklet brings “SVG # (Download)” button can click, associated graphic appear Downloads folder. Note can scroll phylobar visualizations see buttons downloading plots.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/exporting.html","id":"step-2-open-in-editor","dir":"Articles","previous_headings":"","what":"Step 2: Open in Editor","title":"Exporting to Vector Graphics Format","text":"downloaded file ordinary SVG, means can edited image editor designed vector graphics. example, recording , open downloaded figure using Inkscape, free open source vector graphics editor. Notice components phylobar plot already organized layers.. example, layer barplot, sublayers sample, final sublayer taxa within samples. layer structure reflects original DOM structure created D3 visualization code. recording shows can navigate layer structure within Inkscape.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/exporting.html","id":"step-3-modify-and-save","dir":"Articles","previous_headings":"","what":"Step 3: Modify and Save","title":"Exporting to Vector Graphics Format","text":", edit want (e.g., add comment interesting pattern). able export formats might accessible others, e.g., one can embed slides add word document. recording , use layer structure shown previous snippet modify green subtree uses dashed (rather solid) lines link nodes. final version, export graphic PNG format.","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] phylobar_0.99.0   phangorn_2.12.1   purrr_1.1.0       htmlwidgets_1.6.4 #> [5] phyloseq_1.52.0   ape_5.8-1         BiocStyle_2.36.0  #>  #> loaded via a namespace (and not attached): #>  [1] ade4_1.7-23             tidyselect_1.2.1        dplyr_1.1.4             #>  [4] farver_2.1.2            Biostrings_2.76.0       S7_0.2.0                #>  [7] fastmap_1.2.0           digest_0.6.37           lifecycle_1.0.4         #> [10] cluster_2.1.8.1         survival_3.8-3          magrittr_2.0.4          #> [13] compiler_4.5.1          rlang_1.1.6             sass_0.4.10             #> [16] tools_4.5.1             igraph_2.1.4            yaml_2.3.10             #> [19] data.table_1.17.8       knitr_1.50              plyr_1.8.9              #> [22] RColorBrewer_1.1-3      BiocGenerics_0.54.0     desc_1.4.3              #> [25] grid_4.5.1              stats4_4.5.1            multtest_2.64.0         #> [28] biomformat_1.36.0       Rhdf5lib_1.30.0         ggplot2_4.0.0           #> [31] scales_1.4.0            iterators_1.0.14        MASS_7.3-65             #> [34] cli_3.6.5               rmarkdown_2.30          vegan_2.7-1             #> [37] crayon_1.5.3            ragg_1.5.0              generics_0.1.4          #> [40] httr_1.4.7              reshape2_1.4.4          cachem_1.1.0            #> [43] rhdf5_2.52.1            stringr_1.5.2           splines_4.5.1           #> [46] parallel_4.5.1          BiocManager_1.30.26     XVector_0.48.0          #> [49] vctrs_0.6.5             Matrix_1.7-4            jsonlite_2.0.0          #> [52] bookdown_0.44           IRanges_2.42.0          S4Vectors_0.46.0        #> [55] systemfonts_1.2.3       foreach_1.5.2           jquerylib_0.1.4         #> [58] glue_1.8.0              pkgdown_2.1.3           codetools_0.2-20        #> [61] stringi_1.8.7           gtable_0.3.6            GenomeInfoDb_1.44.3     #> [64] quadprog_1.5-8          UCSC.utils_1.4.0        tibble_3.3.0            #> [67] pillar_1.11.1           htmltools_0.5.8.1       rhdf5filters_1.20.0     #> [70] GenomeInfoDbData_1.2.14 R6_2.6.1                textshaping_1.0.3       #> [73] evaluate_1.0.5          lattice_0.22-7          Biobase_2.68.0          #> [76] bslib_0.9.0             Rcpp_1.1.0              fastmatch_1.1-6         #> [79] nlme_3.1-168            permute_0.9-8           mgcv_1.9-3              #> [82] xfun_0.53               fs_1.6.6                pkgconfig_2.0.3"},{"path":"http://mkdiro-o.github.io/phylobar/articles/global_patterns.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Working with phyloseq and TreeSummarizedExperiment versions of the Global Patterns Dataset","text":"","code":"library(phylobar) library(phyloseq) library(miaViz) library(scater)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/global_patterns.html","id":"phyloseq-inputs","dir":"Articles","previous_headings":"","what":"phyloseq Inputs","title":"Working with phyloseq and TreeSummarizedExperiment versions of the Global Patterns Dataset","text":"first study use phylobar phyloseq objects. block sets global pattern status subsets Chlamydia subtree. can extract relevant sample composition using otu_table accessor function.","code":"data(GlobalPatterns, package = \"phyloseq\") chlamydiae <- subset_taxa(GlobalPatterns, Phylum == \"Chlamydiae\") x_phylo <- t(otu_table(chlamydiae))"},{"path":"http://mkdiro-o.github.io/phylobar/articles/global_patterns.html","id":"phylogenetic-tree-tree","dir":"Articles","previous_headings":"phyloseq Inputs","what":"Phylogenetic Tree Tree","title":"Working with phyloseq and TreeSummarizedExperiment versions of the Global Patterns Dataset","text":"first approach use phylogenetic tree support hierarchical interaction. tree can extracted phyloseq object using phy_tree. first subsetted chlamydia subtree. now samples without observed counts. Therefore, remove samples view. can now create phylobar plot.","code":"tree_phylo <- phy_tree(chlamydiae) x_phylo <- x_phylo[rowSums(x_phylo) > 0, ] x_phylo <- x_phylo / rowSums(x_phylo) phylobar(x_phylo, tree_phylo, width = 900)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/global_patterns.html","id":"using-taxonomic-hierarchy","dir":"Articles","previous_headings":"phyloseq Inputs","what":"Using Taxonomic Hierarchy","title":"Working with phyloseq and TreeSummarizedExperiment versions of the Global Patterns Dataset","text":"creates type visualization using taxonomic hierarchy rather phylogeny. need problem-specific preprocessing deal fact ancestor descendant names look identical dataset. add_prefix helper ensures names distinct parents children adding taxonomic rank name. Now can create phylo tree object associated original taxonomy. Note binary tree, since several taxonomic categories descended single node.  Given new taxonomy earlier sample information, can now create phylobar plot.","code":"taxa <- tax_table(chlamydiae) |>     as.data.frame() taxa$ASV <- rownames(taxa) taxa <- phylobar::add_prefix(taxa) tax_tree <- taxonomy_to_tree(taxa) plot(tax_tree) phylobar(x_phylo, tax_tree, width = 900)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/global_patterns.html","id":"treesummarizedexperiment-inputs","dir":"Articles","previous_headings":"","what":"TreeSummarizedExperiment Inputs","title":"Working with phyloseq and TreeSummarizedExperiment versions of the Global Patterns Dataset","text":"example comes miaViz documentation shows create stacked bar tree TreeSummarizedExperiment. ’ll filter species present least one percent samples. example ’ll use relative abundance transformation, left composition plot rather general stacked bar plot. Let’s keep taxes observed least one sample. also need filter tree reflect reduced subset taxa. inputs, can generate phylobar visualization. view didn’t subset chlamydia class, larger tree . hopefully ’s clear TreeSummarizedExperiment phyloseq can essentially used interchangeably constructing necessary inputs visualizations.","code":"data(GlobalPatterns, package = \"mia\") prev_species <- getPrevalent(GlobalPatterns, rank = \"Species\", detection = 0.01) GlobalPatterns_tse <- GlobalPatterns[     rowData(GlobalPatterns)$Species %in% prev_species, ] GlobalPatterns_tse <- transformAssay(     GlobalPatterns_tse,     method = \"relabundance\" ) x_tse <- t(assay(GlobalPatterns_tse, \"relabundance\")) x_tse <- x_tse[, colSums(x_tse) > 0] tree_tse <- rowTree(GlobalPatterns_tse) |>     keep.tip(colnames(x_tse)) phylobar(x_tse, tree_tse, width = 900) sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] scater_1.35.0                   scuttle_1.18.0                  #>  [3] miaViz_1.16.0                   mia_1.16.0                      #>  [5] TreeSummarizedExperiment_2.16.1 Biostrings_2.76.0               #>  [7] XVector_0.48.0                  SingleCellExperiment_1.30.1     #>  [9] MultiAssayExperiment_1.34.0     SummarizedExperiment_1.38.1     #> [11] Biobase_2.68.0                  GenomicRanges_1.60.0            #> [13] GenomeInfoDb_1.44.3             IRanges_2.42.0                  #> [15] S4Vectors_0.46.0                BiocGenerics_0.54.0             #> [17] generics_0.1.4                  MatrixGenerics_1.20.0           #> [19] matrixStats_1.5.0               ggraph_2.2.2                    #> [21] ggplot2_4.0.0                   phylobar_0.99.0                 #> [23] phangorn_2.12.1                 purrr_1.1.0                     #> [25] ape_5.8-1                       htmlwidgets_1.6.4               #> [27] phyloseq_1.52.0                 #>  #> loaded via a namespace (and not attached): #>   [1] splines_4.5.1               ggplotify_0.1.3             #>   [3] tibble_3.3.0                cellranger_1.1.0            #>   [5] polyclip_1.10-7             DirichletMultinomial_1.50.0 #>   [7] lifecycle_1.0.4             lattice_0.22-7              #>   [9] MASS_7.3-65                 SnowballC_0.7.1             #>  [11] magrittr_2.0.4              sass_0.4.10                 #>  [13] rmarkdown_2.30              jquerylib_0.1.4             #>  [15] yaml_2.3.10                 DBI_1.2.3                   #>  [17] RColorBrewer_1.1-3          ade4_1.7-23                 #>  [19] abind_1.4-8                 quadprog_1.5-8              #>  [21] fillpattern_1.0.2           yulab.utils_0.2.1           #>  [23] tweenr_2.0.3                rappdirs_0.3.3              #>  [25] GenomeInfoDbData_1.2.14     ggrepel_0.9.6               #>  [27] tokenizers_0.3.0            irlba_2.3.5.1               #>  [29] tidytree_0.4.6              vegan_2.7-1                 #>  [31] rbiom_2.2.1                 parallelly_1.45.1           #>  [33] pkgdown_2.1.3               permute_0.9-8               #>  [35] DelayedMatrixStats_1.30.0   codetools_0.2-20            #>  [37] DelayedArray_0.34.1         ggtext_0.1.2                #>  [39] xml2_1.4.0                  ggforce_0.5.0               #>  [41] tidyselect_1.2.1            aplot_0.2.9                 #>  [43] UCSC.utils_1.4.0            farver_2.1.2                #>  [45] ScaledMatrix_1.16.0         viridis_0.6.5               #>  [47] jsonlite_2.0.0              BiocNeighbors_2.2.0         #>  [49] multtest_2.64.0             decontam_1.28.0             #>  [51] tidygraph_1.3.1             survival_3.8-3              #>  [53] iterators_1.0.14            emmeans_1.11.2-8            #>  [55] systemfonts_1.2.3           foreach_1.5.2               #>  [57] tools_4.5.1                 ggnewscale_0.5.2            #>  [59] treeio_1.32.0               ragg_1.5.0                  #>  [61] Rcpp_1.1.0                  glue_1.8.0                  #>  [63] gridExtra_2.3               SparseArray_1.8.1           #>  [65] BiocBaseUtils_1.10.0        xfun_0.53                   #>  [67] mgcv_1.9-3                  dplyr_1.1.4                 #>  [69] withr_3.0.2                 fastmap_1.2.0               #>  [71] rhdf5filters_1.20.0         bluster_1.18.0              #>  [73] digest_0.6.37               rsvd_1.0.5                  #>  [75] gridGraphics_0.5-1          R6_2.6.1                    #>  [77] estimability_1.5.1          textshaping_1.0.3           #>  [79] tidyr_1.3.1                 data.table_1.17.8           #>  [81] DECIPHER_3.4.0              graphlayouts_1.2.2          #>  [83] httr_1.4.7                  S4Arrays_1.8.1              #>  [85] pkgconfig_2.0.3             gtable_0.3.6                #>  [87] S7_0.2.0                    janeaustenr_1.0.0           #>  [89] htmltools_0.5.8.1           biomformat_1.36.0           #>  [91] scales_1.4.0                ggfun_0.2.0                 #>  [93] knitr_1.50                  tzdb_0.5.0                  #>  [95] reshape2_1.4.4              coda_0.19-4.1               #>  [97] nlme_3.1-168                cachem_1.1.0                #>  [99] rhdf5_2.52.1                stringr_1.5.2               #> [101] parallel_4.5.1              vipor_0.4.7                 #> [103] desc_1.4.3                  pillar_1.11.1               #> [105] grid_4.5.1                  vctrs_0.6.5                 #> [107] slam_0.1-55                 BiocSingular_1.24.0         #> [109] beachmat_2.24.0             xtable_1.8-4                #> [111] cluster_2.1.8.1             beeswarm_0.4.0              #> [113] evaluate_1.0.5              readr_2.1.5                 #> [115] mvtnorm_1.3-3               cli_3.6.5                   #> [117] compiler_4.5.1              rlang_1.1.6                 #> [119] crayon_1.5.3                tidytext_0.4.3              #> [121] plyr_1.8.9                  fs_1.6.6                    #> [123] ggbeeswarm_0.7.2            stringi_1.8.7               #> [125] viridisLite_0.4.2           BiocParallel_1.42.2         #> [127] lazyeval_0.2.2              Matrix_1.7-4                #> [129] hms_1.1.3                   patchwork_1.3.2             #> [131] sparseMatrixStats_1.20.0    Rhdf5lib_1.30.0             #> [133] gridtext_0.1.5              igraph_2.1.4                #> [135] memoise_2.0.1               bslib_0.9.0                 #> [137] ggtree_3.16.3               fastmatch_1.1-6             #> [139] readxl_1.4.5"},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"High-fat, high-sugar (HFHS) diets known profoundly alter gut microbiome, influencing microbial composition functional capacity. described Susin et al. (2020), effects diet gut microbiome evaluated 47 C57BL/6 female mice. mice fed either HFHS diet normal diet, fecal samples collected days 0, 1, 4, 7. Illumina MiSeq used generate 16S rRNA sequencing data, subsequently processed QIIME 1.9.0. vignette, use preprocessed dataset Kodikara et al. (2025). dataset can accessed GitHub repository LUPINE R package using command devtools::install_github(\"SarithaKodikara/LUPINE\"). , demonstrate apply phylobar package create phylogeny-aware visualizations HFHS diet study data. Specifically, walk tree construction generate visualizations reproduce key findings previous studies, including decreased relative abundance increase relative abundance (Jo et al. 2021, Yang et al. 2024).","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"why-phylogeny-aware-plots","dir":"Articles","previous_headings":"","what":"Why phylogeny-aware plots?","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"Static stacked bar plots often hide changes occur specific taxonomic levels. Phylogeny-aware plots maintain hierarchical structure, zooming level (example, class Bacteroidia family S24-7) lets see whether shifts local clade spread across multiple branches. supports exploratory analysis helps decide levels warrant downstream testing.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"following code block loads packages required analysis. Next, load HFHS dataset, stored LUPINE package HFHSdata. dataset stored list contains OTU tables mice fed either normal diet HFHS diet, along corresponding taxonomic annotations.","code":"library(phylobar)   # phylogeny-aware bar plots library(LUPINE)     # HFHS example dataset library(dplyr)      # data wrangling library(ape)        # phylogenetic tree manipulation library(stringr)    # string operations data(HFHSdata) normal <- HFHSdata$OTUdata_Normal hfhs <- HFHSdata$OTUdata_HFHS taxa <- HFHSdata$filtered_taxonomy"},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"taxonomy-based-tree-construction","dir":"Articles","previous_headings":"","what":"Taxonomy-based tree construction","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"begin constructing taxonomy-based tree taxonomic annotations provided dataset. taxonomy_to_tree function phylobar package used convert taxonomic data phylogenetic tree structure.","code":"tree <- taxa |>     select(-X1, X1) |>     mutate(         across(             everything(),             ~if_else(str_ends(., \"_\"), NA, .)         )     ) |>     taxonomy_to_tree()  checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 212  #> Found number of nodes: m = 80  #> Done."},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"diet-contrasts-on-day-7","dir":"Articles","previous_headings":"","what":"Diet contrasts on day 7","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"visualize effect diet mouse microbiome, focus samples collected day 7. samples expected show pronounced differences normal diet HFHS diet group (Kodikara et al. 2025). begin extracting relevant slices 3D arrays representing OTU tables diet groups. also rename samples indicate diet group (N normal diet H HFHS diet). Finally convert compositions visualize. Lets select Bacteroidia class dropdown see effect diet class.","code":"# Extract day 7 samples and rename normal_day7 <- normal[,, 4] rownames(normal_day7) <- str_replace(rownames(normal_day7), \"M_\", \"N\") hfhs_day7 <- hfhs[,, 4] rownames(hfhs_day7) <- str_replace(rownames(hfhs_day7), \"M_\", \"H\") # Combine the two datasets all_day7 <- rbind(normal_day7, hfhs_day7)  # Order samples and species using hierarchical clustering comp_norm <- normal_day7 comp_norm <- comp_norm / rowSums(comp_norm) sample_order1 <- hclust(dist(comp_norm))$order species_order <- hclust(dist(t(comp_norm)))$order  # Now order the HFHS samples comp_hfhs <- hfhs_day7 comp_hfhs <- comp_hfhs / rowSums(comp_hfhs) sample_order2 <- hclust(dist(comp_hfhs))$order  # Combine the sample orders sample_order <- c(rownames(normal_day7)[sample_order1], rownames(hfhs_day7)[sample_order2])  # Reorder the combined data x <- all_day7[sample_order, species_order] comp <- x / rowSums(x) colnames(comp) <- colnames(all_day7)[species_order] phylobar(comp, tree, hclust_order = FALSE, sample_font_size = 9)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"interpretation","dir":"Articles","previous_headings":"Diet contrasts on day 7","what":"Interpretation","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"Phylobar plot mouse microbiome day 7, comparing normal diet (N) HFHS diet (H). plot highlights relative abundances Bacteroidia class, known decrease response HFHS diet. shown Figure @ref(fig:fig1), relative abundance Bacteroidia decreases HFHS diet group compared normal diet group, consistent previous findings (Jo et al. 2021, Yang et al. 2024). Similarly, can visualize Firmicutes phylum observe increase relative abundance HFHS diet (Figure @ref(fig:fig2)). Phylobar plot mouse microbiome day 7, comparing normal diet (N) HFHS diet (H). plot highlights relative abundances Firmicutes phylum, known increase response HFHS diet.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"longitudinal-trajectories-within-hfhs","dir":"Articles","previous_headings":"","what":"Longitudinal trajectories within HFHS","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"explore longitudinal patterns HFHS diet group, visualized samples collected days 0, 1, 4, 7. allows us track microbiome composition changes time response HFHS diet. Samples deliberately sorted mouse time point, enabling us observe within-mouse changes across study period. important initial relative abundances can differ mice, aligning samples individual helps highlight true longitudinal shifts. now convert compositions visualize longitudinal data HFHS diet group.","code":"y <- hfhs[sample_order2, species_order, ] |>     aperm(c(1, 3, 2)) |>     matrix(nrow = nrow(hfhs)*dim(hfhs)[3] , ncol = ncol(hfhs))  rownames(y) <- apply(     expand.grid(c(0, 1, 4, 7), str_replace(rownames(hfhs),\"M_\",\"\")[sample_order2]),     1, paste, collapse = \"-\" ) comp <- y / rowSums(y) colnames(comp) <- colnames(hfhs)[species_order] phylobar(comp, tree, hclust_order = FALSE, sample_font_size = 9) #p<-phylobar(comp, tree, hclust_order = FALSE, width=1200, height = 800, sample_font_size = 8) #htmlwidgets::saveWidget(p, \"interactive_scatter.html\", selfcontained = TRUE)"},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"interpretations","dir":"Articles","previous_headings":"Longitudinal trajectories within HFHS","what":"Interpretations","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"Even though variability mice high, can observe general decrease relative abundance S24-7 family (within Bacteroidetes phylum) time response HFHS diet (Figure @ref(fig:fig3)). pattern aligns previous findings indicating members S24-7 family sensitive dietary changes tend decrease abundance high-fat, high-sugar dietary conditions (Kodikara et al. 2025). Phylobar plot mouse microbiome HFHS diet. plot highlights relative abundances S24-7 family belong Bacteroidetes phylum, known decrease time response HFHS diet.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/articles/hfhs.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"The effect of a high-fat high-sugar (HFHS) diet on the mouse microbiome","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #>  [1] stringr_1.5.2     dplyr_1.1.4       LUPINE_0.1.0      phylobar_0.99.0   #>  [5] phangorn_2.12.1   purrr_1.1.0       ape_5.8-1         htmlwidgets_1.6.4 #>  [9] phyloseq_1.52.0   BiocStyle_2.36.0  #>  #> loaded via a namespace (and not attached): #>   [1] Rdpack_2.6.4            pbapply_1.7-4           gridExtra_2.3           #>   [4] permute_0.9-8           rlang_1.1.6             magrittr_2.0.4          #>   [7] ade4_1.7-23             NetworkDistance_0.3.6   matrixStats_1.5.0       #>  [10] e1071_1.7-16            compiler_4.5.1          mgcv_1.9-3              #>  [13] png_0.1-8               systemfonts_1.2.3       vctrs_0.6.5             #>  [16] reshape2_1.4.4          quadprog_1.5-8          pkgconfig_2.0.3         #>  [19] crayon_1.5.3            fastmap_1.2.0           XVector_0.48.0          #>  [22] rmarkdown_2.30          influential_2.2.9       pracma_2.4.4            #>  [25] UCSC.utils_1.4.0        graphon_0.3.6           ragg_1.5.0              #>  [28] network_1.19.0          xfun_0.53               cachem_1.1.0            #>  [31] GenomeInfoDb_1.44.3     jsonlite_2.0.0          biomformat_1.36.0       #>  [34] rhdf5filters_1.20.0     BiocParallel_1.42.2     Rhdf5lib_1.30.0         #>  [37] parallel_4.5.1          cluster_2.1.8.1         R6_2.6.1                #>  [40] bslib_0.9.0             stringi_1.8.7           RColorBrewer_1.1-3      #>  [43] rlist_0.4.6.2           jquerylib_0.1.4         Rcpp_1.1.0              #>  [46] bookdown_0.44           iterators_1.0.14        knitr_1.50              #>  [49] ROptSpace_0.2.4         IRanges_2.42.0          Matrix_1.7-4            #>  [52] splines_4.5.1           igraph_2.1.4            tidyselect_1.2.1        #>  [55] abind_1.4-8             yaml_2.3.10             vegan_2.7-1             #>  [58] doParallel_1.0.17       codetools_0.2-20        lattice_0.22-7          #>  [61] tibble_3.3.0            plyr_1.8.9              withr_3.0.2             #>  [64] rARPACK_0.11-0          Biobase_2.68.0          S7_0.2.0                #>  [67] coda_0.19-4.1           evaluate_1.0.5          desc_1.4.3              #>  [70] survival_3.8-3          proxy_0.4-27            Biostrings_2.76.0       #>  [73] pillar_1.11.1           BiocManager_1.30.26     foreach_1.5.2           #>  [76] stats4_4.5.1            ellipse_0.5.0           generics_0.1.4          #>  [79] S4Vectors_0.46.0        ggplot2_4.0.0           scales_1.4.0            #>  [82] class_7.3-23            glue_1.8.0              tools_4.5.1             #>  [85] data.table_1.17.8       RSpectra_0.16-2         fs_1.6.6                #>  [88] fastmatch_1.1-6         rhdf5_2.52.1            grid_4.5.1              #>  [91] tidyr_1.3.1             rbibutils_2.3           nlme_3.1-168            #>  [94] GenomeInfoDbData_1.2.14 cli_3.6.5               textshaping_1.0.3       #>  [97] mixOmics_6.32.0         corpcor_1.6.10          gtable_0.3.6            #> [100] sass_0.4.10             digest_0.6.37           BiocGenerics_0.54.0     #> [103] ggrepel_0.9.6           farver_2.1.2            htmltools_0.5.8.1       #> [106] pkgdown_2.1.3           multtest_2.64.0         lifecycle_1.0.4         #> [109] httr_1.4.7              statnet.common_4.12.0   MASS_7.3-65"},{"path":"http://mkdiro-o.github.io/phylobar/articles/taxonomies.html","id":"checking-that-that-the-induced-tree-is-correct","dir":"Articles","previous_headings":"","what":"Checking that that the induced tree is correct","title":"Building Trees from Taxonomies","text":"looking potential issues, let’s review check whether input tree valid. block , generate random tree using rtree function ape. can confirm validity checkValidPhylo function. output TRUE, tree can used phylobar visualizations. , function provides hints adjust taxonomy table taxonomy_to_tree produces valid tree.","code":"tree <- rtree(20) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 20  #> Found number of nodes: m = 19  #> Done."},{"path":"http://mkdiro-o.github.io/phylobar/articles/taxonomies.html","id":"introducing-a-missing-root-node","dir":"Articles","previous_headings":"","what":"Introducing a missing root node","title":"Building Trees from Taxonomies","text":"One common issue absence root node links descendant microbes. Many taxonomy tables implicitly assume Bacteria kingdom begin phylum level. cases, validity checks may fail error like one . occurs phylum treated separate tree, rather connected single tree Kingdom root. problem can resolved introducing new “kingdom” column phyla descend. fix, taxonomy_to_tree correctly builds edges first second columns. Re-running validity check now produces valid tree object, used earlier Atlas vignette.","code":"data(atlas1006, package = \"microbiome\") tree <- taxonomy_to_tree(tax_table(atlas1006)) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 128  #> Found number of nodes: m = 23  #>   FATAL: nodes and tips should appear only once in the 2nd column of 'edge' #>   FATAL: the root node should not appear in the 2nd column of 'edge' #> Done. taxa <- tax_table(atlas1006) taxa <- cbind(Kingdom = \"Bacteria\", taxa) taxa <- add_prefix(taxa)  tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 130  #> Found number of nodes: m = 31  #> Done."},{"path":"http://mkdiro-o.github.io/phylobar/articles/taxonomies.html","id":"skipping-over-missing-taxonomic-assignments","dir":"Articles","previous_headings":"","what":"Skipping over missing taxonomic assignments","title":"Building Trees from Taxonomies","text":"Another common issue involves missing taxonomic assignments. phylobar can skip missing entries, encoded NA. missing values stored character strings (e.g., “unclassified”), treated valid categories. Since often appear multiple levels resolution different parents, breaks tree structure. avoid , missing values explicitly coded NA. approach illustrated high-fat, high-sugar diet vignette, taxonomy table pre-processed replace placeholder strings NA. taxonomy correction. Notice NAs properly coded – see prefix coming taxonomic level, corresponding name. address block , checking whether name ended __ replacing explicit NA value. transformation made, table can used construct valid tree.","code":"data(HFHSdata, package = \"LUPINE\") taxa <- HFHSdata$filtered_taxonomy tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 8  #> Found number of nodes: m = 287  #>   FATAL: each tip must appear once in 'edge' #>   FATAL: all nodes should appear at least twice in 'edge' #>   MODERATE: some nodes are of degree 1 or less #>   FATAL: nodes and tips should appear only once in the 2nd column of 'edge' #> Done. head(taxa) #>            X1          X2                X3              X4                X5 #> OTU_13 OTU_13 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_21 OTU_21 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_7   OTU_7 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_29 OTU_29 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_30 OTU_30 k__Bacteria     p__Firmicutes   c__Clostridia  o__Clostridiales #> OTU_14 OTU_14 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #>                       X6   X7   X8 #> OTU_13          f__S24-7  g__  s__ #> OTU_21          f__S24-7  g__  s__ #> OTU_7           f__S24-7  g__  s__ #> OTU_29  f__Rikenellaceae  g__  s__ #> OTU_30               f__  g__  s__ #> OTU_14          f__S24-7  g__  s__ taxa <- taxa |>     select(-X1, X1) |>     mutate(across(everything(), ~if_else(str_ends(., \"_\"), NA, .)))  head(taxa) #>                 X2                X3              X4                X5 #> OTU_13 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_21 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_7  k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_29 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #> OTU_30 k__Bacteria     p__Firmicutes   c__Clostridia  o__Clostridiales #> OTU_14 k__Bacteria  p__Bacteroidetes  c__Bacteroidia  o__Bacteroidales #>                       X6   X7   X8     X1 #> OTU_13          f__S24-7 <NA> <NA> OTU_13 #> OTU_21          f__S24-7 <NA> <NA> OTU_21 #> OTU_7           f__S24-7 <NA> <NA>  OTU_7 #> OTU_29  f__Rikenellaceae <NA> <NA> OTU_29 #> OTU_30              <NA> <NA> <NA> OTU_30 #> OTU_14          f__S24-7 <NA> <NA> OTU_14 tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 212  #> Found number of nodes: m = 80  #> Done."},{"path":"http://mkdiro-o.github.io/phylobar/articles/taxonomies.html","id":"avoiding-duplicated-names-across-different-taxonomic-levels","dir":"Articles","previous_headings":"","what":"Avoiding duplicated names across different taxonomic levels","title":"Building Trees from Taxonomies","text":"Another common problem arises taxonomic names explicitly distinguished across different levels resolution. example, dietswap dataset, phylum- family-level assignments share names. uncorrected, taxonomy_to_tree interprets edges loops, produces invalid tree. validity check fail case. see , let’s first extract taxonomy table. Note repeated phylum family names. causes check fail. address , can add small prefix encodes taxonomic rank assignment. helper function add_prefix supports concatenation. stage, however, running validity check still raises error. Atlas example, issue absence root node connecting different phyla. Adding “Kingdom” column resolves linking trees together. issue duplicated taxonomy names also appears Global Patterns dataset. instance, several phylum- class-level assignments share identical names. duplication results invalid phylo. , can resolve using add_prefix function. dataset raises one additional challenge: ASV names stored row names, explicit column taxonomy table. Without , reach leaf nodes tree. solution introduce new column containing ASV identifiers. adjustment, checking validity resulting tree still returns error. case, error can safely ignored: occurs tree contains nodes two descendants. phylobar accommodates multifurcations without issue. verify, can simply plot phylo object directly creating phylobar visualization. can check static version tree work main Global Patterns vignette.","code":"data(\"dietswap\", package = \"microbiome\") diet_temp <- subset_samples(dietswap, timepoint == 1) diet <- subset_taxa(diet_temp, taxa_sums(diet_temp) > 0) taxa <- tax_table(diet) head(taxa) #> Taxonomy Table:     [6 taxa by 3 taxonomic ranks]: #>                              Phylum            Family                     #> Actinomycetaceae             \"Actinobacteria\"  \"Actinobacteria\"           #> Aeromonas                    \"Proteobacteria\"  \"Proteobacteria\"           #> Akkermansia                  \"Verrucomicrobia\" \"Verrucomicrobia\"          #> Alcaligenes faecalis et rel. \"Proteobacteria\"  \"Proteobacteria\"           #> Allistipes et rel.           \"Bacteroidetes\"   \"Bacteroidetes\"            #> Anaerostipes caccae et rel.  \"Firmicutes\"      \"Clostridium cluster XIVa\" #>                              Genus                          #> Actinomycetaceae             \"Actinomycetaceae\"             #> Aeromonas                    \"Aeromonas\"                    #> Akkermansia                  \"Akkermansia\"                  #> Alcaligenes faecalis et rel. \"Alcaligenes faecalis et rel.\" #> Allistipes et rel.           \"Allistipes et rel.\"           #> Anaerostipes caccae et rel.  \"Anaerostipes caccae et rel.\" tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 117  #> Found number of nodes: m = 22  #>   FATAL: nodes and tips should appear only once in the 2nd column of 'edge' #>   FATAL: the root node should not appear in the 2nd column of 'edge' #> Done. taxa <- add_prefix(taxa) taxa <- cbind(Kingdom = \"k_Bacteria\", taxa) tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 119  #> Found number of nodes: m = 30  #> Done. data(GlobalPatterns, package = \"phyloseq\") chlamydiae <- subset_taxa(GlobalPatterns, Phylum == \"Chlamydiae\") taxa <- tax_table(chlamydiae) head(taxa) #> Taxonomy Table:     [6 taxa by 7 taxonomic ranks]: #>        Kingdom    Phylum       Class        Order          Family              #> 100535 \"Bacteria\" \"Chlamydiae\" \"Chlamydiae\" \"Chlamydiales\" \"Waddliaceae\"       #> 2936   \"Bacteria\" \"Chlamydiae\" \"Chlamydiae\" \"Chlamydiales\" \"Waddliaceae\"       #> 24341  \"Bacteria\" \"Chlamydiae\" \"Chlamydiae\" \"Chlamydiales\" \"Parachlamydiaceae\" #> 579085 \"Bacteria\" \"Chlamydiae\" \"Chlamydiae\" \"Chlamydiales\" \"Parachlamydiaceae\" #> 547579 \"Bacteria\" \"Chlamydiae\" \"Chlamydiae\" \"Chlamydiales\" \"Parachlamydiaceae\" #> 136933 \"Bacteria\" \"Chlamydiae\" \"Chlamydiae\" \"Chlamydiales\" \"Parachlamydiaceae\" #>        Genus                      Species                               #> 100535 \"Waddlia\"                  NA                                    #> 2936   \"Waddlia\"                  \"Waddliachondrophila\"                 #> 24341  NA                         NA                                    #> 579085 NA                         NA                                    #> 547579 \"CandidatusProtochlamydia\" NA                                    #> 136933 \"CandidatusProtochlamydia\" \"CandidatusProtochlamydiaamoebophila\" tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 5  #> Found number of nodes: m = 9  #>   FATAL: all nodes should appear at least twice in 'edge' #>   FATAL: nodes and tips should appear only once in the 2nd column of 'edge' #> Done. taxa <- data.frame(taxa) taxa <- add_prefix(taxa) taxa$ASV <- rownames(taxa) head(taxa) #>           Kingdom       Phylum        Class          Order              Family #> 100535 K_Bacteria P_Chlamydiae C_Chlamydiae O_Chlamydiales       F_Waddliaceae #> 2936   K_Bacteria P_Chlamydiae C_Chlamydiae O_Chlamydiales       F_Waddliaceae #> 24341  K_Bacteria P_Chlamydiae C_Chlamydiae O_Chlamydiales F_Parachlamydiaceae #> 579085 K_Bacteria P_Chlamydiae C_Chlamydiae O_Chlamydiales F_Parachlamydiaceae #> 547579 K_Bacteria P_Chlamydiae C_Chlamydiae O_Chlamydiales F_Parachlamydiaceae #> 136933 K_Bacteria P_Chlamydiae C_Chlamydiae O_Chlamydiales F_Parachlamydiaceae #>                             Genus                             Species    ASV #> 100535                  G_Waddlia                                <NA> 100535 #> 2936                    G_Waddlia                 Waddliachondrophila   2936 #> 24341                        <NA>                                <NA>  24341 #> 579085                       <NA>                                <NA> 579085 #> 547579 G_CandidatusProtochlamydia                                <NA> 547579 #> 136933 G_CandidatusProtochlamydia CandidatusProtochlamydiaamoebophila 136933 tree <- taxonomy_to_tree(taxa) checkValidPhylo(tree) #> Starting checking the validity of tree... #> Found number of tips: n = 21  #> Found number of nodes: m = 15  #>   FATAL: all nodes should appear at least twice in 'edge' #> Done. plot(tree) sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.6.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Chicago #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.2     phylobar_0.99.0   phangorn_2.12.1   purrr_1.1.0       #> [5] htmlwidgets_1.6.4 phyloseq_1.52.0   dplyr_1.1.4       ape_5.8-1         #>  #> loaded via a namespace (and not attached): #>  [1] fastmatch_1.1-6         gtable_0.3.6            xfun_0.53               #>  [4] bslib_0.9.0             ggplot2_4.0.0           rhdf5_2.52.1            #>  [7] Biobase_2.68.0          lattice_0.22-7          quadprog_1.5-8          #> [10] rhdf5filters_1.20.0     vctrs_0.6.5             tools_4.5.1             #> [13] generics_0.1.4          biomformat_1.36.0       stats4_4.5.1            #> [16] parallel_4.5.1          tibble_3.3.0            cluster_2.1.8.1         #> [19] pkgconfig_2.0.3         Matrix_1.7-4            data.table_1.17.8       #> [22] RColorBrewer_1.1-3      S7_0.2.0                desc_1.4.3              #> [25] S4Vectors_0.46.0        lifecycle_1.0.4         GenomeInfoDbData_1.2.14 #> [28] compiler_4.5.1          farver_2.1.2            textshaping_1.0.3       #> [31] Biostrings_2.76.0       codetools_0.2-20        permute_0.9-8           #> [34] GenomeInfoDb_1.44.3     htmltools_0.5.8.1       sass_0.4.10             #> [37] yaml_2.3.10             pillar_1.11.1           pkgdown_2.1.3           #> [40] crayon_1.5.3            jquerylib_0.1.4         MASS_7.3-65             #> [43] cachem_1.1.0            vegan_2.7-1             iterators_1.0.14        #> [46] foreach_1.5.2           nlme_3.1-168            tidyselect_1.2.1        #> [49] digest_0.6.37           stringi_1.8.7           reshape2_1.4.4          #> [52] splines_4.5.1           ade4_1.7-23             fastmap_1.2.0           #> [55] grid_4.5.1              cli_3.6.5               magrittr_2.0.4          #> [58] survival_3.8-3          withr_3.0.2             UCSC.utils_1.4.0        #> [61] scales_1.4.0            rmarkdown_2.30          XVector_0.48.0          #> [64] httr_1.4.7              multtest_2.64.0         igraph_2.1.4            #> [67] ragg_1.5.0              evaluate_1.0.5          knitr_1.50              #> [70] IRanges_2.42.0          mgcv_1.9-3              rlang_1.1.6             #> [73] Rcpp_1.1.0              glue_1.8.0              BiocGenerics_0.54.0     #> [76] jsonlite_2.0.0          R6_2.6.1                Rhdf5lib_1.30.0         #> [79] plyr_1.8.9              systemfonts_1.2.3       fs_1.6.6"},{"path":"http://mkdiro-o.github.io/phylobar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kris Sankaran. Author, maintainer, funder. Megan Kuo. Author. Saritha Kodikara. Author. Jiadong Mao. Author.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sankaran K, Kuo M, Kodikara S, Mao J (2025). phylobar: Interactive construction stacked barplots using hierarchies. R package version 0.99.0, https://github.com/mkdiro-O/phylobar.","code":"@Manual{,   title = {phylobar: Interactive construction of stacked barplots using hierarchies},   author = {Kris Sankaran and Megan Kuo and Saritha Kodikara and Jiadong Mao},   year = {2025},   note = {R package version 0.99.0},   url = {https://github.com/mkdiro-O/phylobar}, }"},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"phylobar","dir":"","previous_headings":"","what":"Interactive construction of stacked barplots using hierarchies","title":"Interactive construction of stacked barplots using hierarchies","text":"phylobar visualization package constructing stacked barplots interactively “painting” associated tree. alternative defining color palette fixed taxonomic resolution. also helps avoid issue grouping rare taxa color “” — can selectively highlight specific rare taxa leaving others background color. main function, phylobar, takes two inputs: table potentially normalized counts tree structure can come either phylogeny table taxonomic assignments. vignettes show convert alternative data formats (e.g., phyloseq) input format. can export interactive snapshots SVG using SVG crowbar package, shown “Exporting Views” vignette.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive construction of stacked barplots using hierarchies","text":"can install development version phylobar using:","code":"remotes::install_packages(\"mkdir-o/phylobar\")"},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Interactive construction of stacked barplots using hierarchies","text":"block applies phylobar small random data set:  GitHub doesn’t support interactive blocks READMEs, ’ve included recording . can interact example output precompiled articles. Click node collapse subtree, press control key introduce new color, press escape key freeze view.","code":"library(ape) library(phylobar)  tree <- rtree(20) samples <- matrix(rpois(100 * 20, 1), 100, 20) phylobar(samples, tree)"},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"common-tasks","dir":"","previous_headings":"","what":"Common Tasks","title":"Interactive construction of stacked barplots using hierarchies","text":"Customizing style: Phylobar supports styling customizations, like changing size text labels color palette. vignette walks currently available options. Building tree taxonomy: Rather interacting abstract phylogenetic trees can helpful choose stacked bar color using taxonomic assignments. vignette gets quick overview constructing trees taxonomy tables, including checks make sure input formatted properly. Exporting views: interactivity useful exploration, often need export specific static view discuss others. vignette gives alternative simple screenshots preserves image quality supports, editing software like illustrator inkscape. Subsetting representative samples: Stacked bar plots can cumbersome many samples (e.g., > 1000) present, bars become thin. vignette includes helper functions create views representative samples.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Interactive construction of stacked barplots using hierarchies","text":"full function reference can found : https://mkdiro-o.github.io/phylobar/reference/index.html.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Interactive construction of stacked barplots using hierarchies","text":"Additional vignettes provide fully developed examples quality control, cross group comparison, longitudinal analysis. package design follows focus-plus-context principle data visualization – paper provides -depth discussion. package implemented using htmlwidgets package R-JavaScript integration. JavaScript code available npm phylobar-js.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Interactive construction of stacked barplots using hierarchies","text":"can reach us creating Issue emailing ksankaran@wisc.edu. appreciate interest respond promptly.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/add_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rank prefixes to taxonomic matrix values. — add_prefix","title":"Add rank prefixes to taxonomic matrix values. — add_prefix","text":"value taxonomic matrix (except last column), adds prefix based first character column (rank) name. example, column \"Genus\", prefix \"G_\".","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/add_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rank prefixes to taxonomic matrix values. — add_prefix","text":"","code":"add_prefix(taxa)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/add_prefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rank prefixes to taxonomic matrix values. — add_prefix","text":"taxa character matrix columns representing taxonomic ranks rows representing taxa.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/add_prefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rank prefixes to taxonomic matrix values. — add_prefix","text":"character matrix prefixes added value (except last column).","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/add_prefix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add rank prefixes to taxonomic matrix values. — add_prefix","text":"","code":"taxa <- matrix(   c(\"Firmicutes\", \"Bacilli\", \"Lactobacillales\",     \"Proteobacteria\", \"Gammaproteobacteria\", \"Enterobacterales\"),   ncol = 3, byrow = TRUE,   dimnames = list(NULL, c(\"Phylum\", \"Class\", \"Order\")) ) add_prefix(taxa) #>      Phylum             Class                   Order              #> [1,] \"P_Firmicutes\"     \"C_Bacilli\"             \"Lactobacillales\"  #> [2,] \"P_Proteobacteria\" \"C_Gammaproteobacteria\" \"Enterobacterales\""},{"path":"http://mkdiro-o.github.io/phylobar/reference/edgelist_to_phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an edge list to an ape phylo object. — edgelist_to_phylo","title":"Convert an edge list to an ape phylo object. — edgelist_to_phylo","text":"Takes two column matrix (parents -> descendants) constructs ape phylo object .","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/edgelist_to_phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an edge list to an ape phylo object. — edgelist_to_phylo","text":"","code":"edgelist_to_phylo(edgelist)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/edgelist_to_phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an edge list to an ape phylo object. — edgelist_to_phylo","text":"edgelist two-column matrix row represents parent-descendant relationship.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/edgelist_to_phylo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an edge list to an ape phylo object. — edgelist_to_phylo","text":"object class 'phylo' representing tree structure.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/edgelist_to_phylo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an edge list to an ape phylo object. — edgelist_to_phylo","text":"","code":"# Example edge list: parent -> child edgelist <- matrix(   c(\"A\", \"B\",     \"A\", \"C\",     \"B\", \"D\",     \"B\", \"E\"),   ncol = 2, byrow = TRUE,   dimnames = list(NULL, c(\"parent\", \"child\")) ) tree <- edgelist_to_phylo(edgelist) str(tree) #> List of 4 #>  $ edge      : int [1:4, 1:2] 4 4 5 5 5 1 2 3 #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"A\" \"A\" \"B\" \"B\" #>   .. ..$ : NULL #>  $ tip.label : chr [1:3] \"C\" \"D\" \"E\" #>  $ node.label: chr [1:2] \"A\" \"B\" #>  $ Nnode     : int 2 #>  - attr(*, \"class\")= chr \"phylo\""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Initial Hierarchy — node_hierarchy","title":"Construct Initial Hierarchy — node_hierarchy","text":"reshapes list output node_totals hierarchical format needed d3 tree visualization.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Initial Hierarchy — node_hierarchy","text":"","code":"node_hierarchy(tree, totals, node = NULL)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Initial Hierarchy — node_hierarchy","text":"tree object class phylo, representing tree structure. totals named list node totals, returned node_totals. node Name node start recursion. Defaults root node.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Initial Hierarchy — node_hierarchy","text":"nested list representing hierarchy, node containing ' name, value, summary, children ().","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Initial Hierarchy — node_hierarchy","text":"","code":"library(ape) set.seed(1) tree <- rtree(5) x_mat <- matrix(runif(15), ncol = 5) colnames(x_mat) <- tree$tip.label  tree$node.label <- as.character(seq_len(tree$Nnode)) totals <- c(   node_totals(tree, x_mat),   as.list(data.frame(x_mat)) ) node_hierarchy(tree, totals) #> $name #> [1] \"1\" #>  #> $value #>          [,1] #> [1,] 2.405906 #> [2,] 1.723866 #> [3,] 3.284490 #>  #> $summary #> [1] 7.414262 #>  #> $children #> $children[[1]] #> $children[[1]]$name #> [1] \"t2\" #>  #> $children[[1]]$value #>           [,1] #> [1,] 0.9919061 #> [2,] 0.3800352 #> [3,] 0.7774452 #>  #> $children[[1]]$summary #> [1] 2.149386 #>  #> $children[[1]]$children #> [1] NA #>  #>  #> $children[[2]] #> $children[[2]]$name #> [1] \"2\" #>  #> $children[[2]]$value #>          [,1] #> [1,] 1.414000 #> [2,] 1.343831 #> [3,] 2.507045 #>  #> $children[[2]]$summary #> [1] 5.264875 #>  #> $children[[2]]$children #> $children[[2]]$children[[1]] #> $children[[2]]$children[[1]]$name #> [1] \"3\" #>  #> $children[[2]]$children[[1]]$value #>           [,1] #> [1,] 1.0736507 #> [2,] 0.8617511 #> [3,] 1.9074787 #>  #> $children[[2]]$children[[1]]$summary #> [1] 3.842881 #>  #> $children[[2]]$children[[1]]$children #> $children[[2]]$children[[1]]$children[[1]] #> $children[[2]]$children[[1]]$children[[1]]$name #> [1] \"t1\" #>  #> $children[[2]]$children[[1]]$children[[1]]$value #>           [,1] #> [1,] 0.9347052 #> [2,] 0.2121425 #> [3,] 0.6516738 #>  #> $children[[2]]$children[[1]]$children[[1]]$summary #> [1] 1.798522 #>  #> $children[[2]]$children[[1]]$children[[1]]$children #> [1] NA #>  #>  #> $children[[2]]$children[[1]]$children[[2]] #> $children[[2]]$children[[1]]$children[[2]]$name #> [1] \"4\" #>  #> $children[[2]]$children[[1]]$children[[2]]$value #>           [,1] #> [1,] 0.1389454 #> [2,] 0.6496086 #> [3,] 1.2558049 #>  #> $children[[2]]$children[[1]]$children[[2]]$summary #> [1] 2.044359 #>  #> $children[[2]]$children[[1]]$children[[2]]$children #> $children[[2]]$children[[1]]$children[[2]]$children[[1]] #> $children[[2]]$children[[1]]$children[[2]]$children[[1]]$name #> [1] \"t3\" #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[1]]$value #>           [,1] #> [1,] 0.1255551 #> [2,] 0.2672207 #> [3,] 0.3861141 #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[1]]$summary #> [1] 0.7788899 #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[1]]$children #> [1] NA #>  #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[2]] #> $children[[2]]$children[[1]]$children[[2]]$children[[2]]$name #> [1] \"t4\" #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[2]]$value #>            [,1] #> [1,] 0.01339033 #> [2,] 0.38238796 #> [3,] 0.86969085 #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[2]]$summary #> [1] 1.265469 #>  #> $children[[2]]$children[[1]]$children[[2]]$children[[2]]$children #> [1] NA #>  #>  #>  #>  #>  #>  #> $children[[2]]$children[[2]] #> $children[[2]]$children[[2]]$name #> [1] \"t5\" #>  #> $children[[2]]$children[[2]]$value #>           [,1] #> [1,] 0.3403490 #> [2,] 0.4820801 #> [3,] 0.5995658 #>  #> $children[[2]]$children[[2]]$summary #> [1] 1.421995 #>  #> $children[[2]]$children[[2]]$children #> [1] NA #>  #>  #>  #>  #>"},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_totals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Node Totals — node_totals","title":"Compute Node Totals — node_totals","text":"loops internal nodes tree takes sum descendant taxa, sample.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_totals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Node Totals — node_totals","text":"","code":"node_totals(tree, x_mat)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_totals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Node Totals — node_totals","text":"tree object class phylo, representing tree structure. Must tip labels matching columns x_mat. x_mat numeric matrix abundances, samples rows features (tips) columns. Column names correspond tree tip","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_totals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Node Totals — node_totals","text":"named list element corresponds internal node (node label) contains vector totals sample, computed summing abundances descendant tips.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/node_totals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Node Totals — node_totals","text":"","code":"library(ape) set.seed(1) tree <- rtree(5) x_mat <- matrix(runif(15), ncol = 5) colnames(x_mat) <- tree$tip.label tree$node.label <- as.character(seq_len(tree$Nnode)) node_totals(tree, x_mat) #> $`1` #> [1] 2.405906 1.723866 3.284490 #>  #> $`2` #> [1] 1.414000 1.343831 2.507045 #>  #> $`3` #> [1] 1.0736507 0.8617511 1.9074787 #>  #> $`4` #> [1] 0.1389454 0.6496086 1.2558049 #>"},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree + Stacked Bars — phylobar","title":"Tree + Stacked Bars — phylobar","text":"phylobar visualization package makes possible construct stacked barplot interactively \"painting\" associated tree. alternative defining color palette using fixed taxonomic resolution. also helps avoid issue grouping rare taxa color \"\" since species can chosen selectively, can paint rare taxa rest.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree + Stacked Bars — phylobar","text":"","code":"phylobar(   x,   tree,   hclust_order = TRUE,   palette = NULL,   width = NULL,   height = NULL,   sample_font_size = 8,   sample_label_margin = 10,   sample_label_space = 50,   sample_magnify = 1.5,   sample_show_all = TRUE,   element_id = NULL,   rel_width = 0.4,   rel_height = 0.85,   rel_space = 10,   legend_mode = TRUE,   legend_x_start = 5,   legend_spacing = 16 )"},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tree + Stacked Bars — phylobar","text":"x matrix abundances. Samples along rows, features along columns. tree object class phylo, representing tree structure. hclust_order Logical; TRUE, reorder rows/columns hierarchical clustering. palette Character vector colors stacked bars. NULL, uses default palette: c(\"#9c7bbaff\", \"#6eb8acff\", \"#ce7b7bff\", \"#7b9cc4ff\", \"#c47ba0ff\", \"#e1d07eff\"). width Width widget pixels. NULL, uses window default. height Height widget pixels. NULL, uses window default. sample_font_size Font size sample labels (integer). sample_label_margin Margin sample labels bars pixels. sample_label_space Space allocated sample labels pixels. sample_magnify Magnification factor hovered sample labels. sample_show_all Logical; TRUE, show sample labels. element_id Optional HTML element ID attach widget . rel_width Width tree panel relative overall visualization. Defaults 0.4. rel_height Relative height tree overall visualization. Defaults 0.85. Adjust need /less space legend. rel_space Space tree barplot panels pixels. legend_mode Logical; TRUE (default), display labels painted subtrees legend near bottom tree.  FALSE, include labels within tree . legend_x_start Horizontal starting position (pixels) legend. Defaults 4. legend_spacing Vertical spacing (pixels) legend entries.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tree + Stacked Bars — phylobar","text":"htmlwidget visualization attached element element_id output HTML page.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tree + Stacked Bars — phylobar","text":"","code":"library(ape) set.seed(1) tree <- rtree(5) x <- matrix(rpois(15, 1), ncol = 5) phylobar(x, tree)  {\"x\":{\"tree_data\":{\"name\":\"node1\",\"value\":[[7],[3],[7]],\"summary\":17,\"children\":[{\"name\":\"t2\",\"value\":[[4],[1],[2]],\"summary\":7,\"children\":null},{\"name\":\"node2\",\"value\":[[3],[2],[5]],\"summary\":10,\"children\":[{\"name\":\"node3\",\"value\":[[3],[1],[4]],\"summary\":8,\"children\":[{\"name\":\"t1\",\"value\":[[3],[0],[1]],\"summary\":4,\"children\":null},{\"name\":\"node4\",\"value\":[[0],[1],[3]],\"summary\":4,\"children\":[{\"name\":\"t3\",\"value\":[[0],[0],[1]],\"summary\":1,\"children\":null},{\"name\":\"t4\",\"value\":[[0],[1],[2]],\"summary\":3,\"children\":null}]}]},{\"name\":\"t5\",\"value\":[[0],[1],[1]],\"summary\":2,\"children\":null}]}]},\"labels\":[\"sample_1\",\"sample_2\",\"sample_3\"],\"palette\":[\"#9c7bbaff\",\"#6eb8acff\",\"#ce7b7bff\",\"#7b9cc4ff\",\"#c47ba0ff\",\"#e1d07eff\"],\"opts\":{\"legend_mode\":true,\"legend_spacing\":16,\"legend_x_start\":5,\"rel_height\":0.85,\"rel_space\":10,\"rel_width\":0.4,\"sample_font_size\":8,\"sample_label_margin\":10,\"sample_label_space\":50,\"sample_magnify\":1.5,\"sample_show_all\":true}},\"evals\":[],\"jsHooks\":[]}"},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare tree data for phylobar visualization — phylobar_data","title":"Prepare tree data for phylobar visualization — phylobar_data","text":"Prepare tree data phylobar visualization","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare tree data for phylobar visualization — phylobar_data","text":"","code":"phylobar_data(x, tree, hclust_order = TRUE)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare tree data for phylobar visualization — phylobar_data","text":"x matrix abundances. Samples along rows, features along columns. tree n object class phylo, representing tree structure. hclust_order Logical; TRUE, reorder rows/columns hierarchical clustering.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare tree data for phylobar visualization — phylobar_data","text":"list tree_data labels.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/phylobar_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare tree data for phylobar visualization — phylobar_data","text":"","code":"library(ape) set.seed(1) tree <- rtree(5) x <- matrix(runif(15), nrow = 3) colnames(x) <- tree$tip.label rownames(x) <- paste0(\"sample\", 1:3) phylobar_data(x, tree) #> Error in if (tree$node.label[1] == \"\") {    tree$node.label[1] <- \"root\"}: argument is of length zero"},{"path":"http://mkdiro-o.github.io/phylobar/reference/subset_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsample rows of a matrix using hierarchical clustering — subset_cluster","title":"Subsample rows of a matrix using hierarchical clustering — subset_cluster","text":"function takes matrix x subsamples rows clustering using hierarchical clustering. One representative row selected cluster, helps visualizing large dataset semi-representative way.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/subset_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsample rows of a matrix using hierarchical clustering — subset_cluster","text":"","code":"subset_cluster(x, k = 100)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/subset_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsample rows of a matrix using hierarchical clustering — subset_cluster","text":"x matrix whose rows clustered subsampled. k number clusters form (default 100).","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/subset_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsample rows of a matrix using hierarchical clustering — subset_cluster","text":"matrix containing one representative row cluster.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/subset_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsample rows of a matrix using hierarchical clustering — subset_cluster","text":"","code":"mat <- matrix(rnorm(1000), nrow = 100) rownames(mat) <- seq_len(100) result <- subset_cluster(mat, k = 10) dim(result) # only 10 representatives #> [1] 10 10"},{"path":"http://mkdiro-o.github.io/phylobar/reference/taxonomy_to_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a taxonomic table to an ape phylo object. — taxonomy_to_tree","title":"Convert a taxonomic table to an ape phylo object. — taxonomy_to_tree","text":"Creates phylo taxonomic tree, skipping NA assignments. Assumes columns sorted coarsest finest taxonomic resolution.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/taxonomy_to_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a taxonomic table to an ape phylo object. — taxonomy_to_tree","text":"","code":"taxonomy_to_tree(taxa)"},{"path":"http://mkdiro-o.github.io/phylobar/reference/taxonomy_to_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a taxonomic table to an ape phylo object. — taxonomy_to_tree","text":"taxa data.frame matrix columns representing taxonomic ranks (sorted coarsest finest) rows representing taxa. NA empty values skipped.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/taxonomy_to_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a taxonomic table to an ape phylo object. — taxonomy_to_tree","text":"object class 'phylo' representing taxonomic tree.","code":""},{"path":"http://mkdiro-o.github.io/phylobar/reference/taxonomy_to_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a taxonomic table to an ape phylo object. — taxonomy_to_tree","text":"","code":"taxa <- matrix(   c(\"Firmicutes\", \"Bacilli\", \"Lactobacillales\",     \"Proteobacteria\", \"Gammaproteobacteria\", \"Enterobacterales\"),   ncol = 3, byrow = TRUE,   dimnames = list(NULL, c(\"Phylum\", \"Class\", \"Order\")) ) tree <- taxonomy_to_tree(taxa) str(tree) #> List of 4 #>  $ edge      : int [1:4, 1:2] 3 4 5 6 4 1 6 2 #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"Firmicutes\" \"Bacilli\" \"Proteobacteria\" \"Gammaproteobacteria\" #>   .. ..$ : NULL #>  $ tip.label : chr [1:2] \"Lactobacillales\" \"Enterobacterales\" #>  $ node.label: chr [1:4] \"Firmicutes\" \"Bacilli\" \"Proteobacteria\" \"Gammaproteobacteria\" #>  $ Nnode     : int 4 #>  - attr(*, \"class\")= chr \"phylo\"  # A more involved example with missing values taxa <- matrix(   c(\"Firmicutes\", \"Bacilli\", \"Lactobacillales\", \"ASV1\",     \"Proteobacteria\", \"Gammaproteobacteria\", \"Enterobacterales\", \"ASV2\",     \"Firmicutes\", \"Bacilli\", NA, \"ASV3\"),   ncol = 4, byrow = TRUE,   dimnames = list(NULL, c(\"Phylum\", \"Class\", \"Order\", \"ASV\")) ) taxmat <- add_prefix(taxa) tree <- taxonomy_to_tree(taxmat) str(tree) #> List of 4 #>  $ edge      : int [1:7, 1:2] 4 5 6 7 8 9 5 5 6 1 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:7] \"P_Firmicutes\" \"C_Bacilli\" \"O_Lactobacillales\" \"P_Proteobacteria\" ... #>   .. ..$ : NULL #>  $ tip.label : chr [1:3] \"ASV1\" \"ASV2\" \"ASV3\" #>  $ node.label: chr [1:6] \"P_Firmicutes\" \"C_Bacilli\" \"O_Lactobacillales\" \"P_Proteobacteria\" ... #>  $ Nnode     : int 6 #>  - attr(*, \"class\")= chr \"phylo\""},{"path":"http://mkdiro-o.github.io/phylobar/news/index.html","id":"phylobar-0990","dir":"Changelog","previous_headings":"","what":"phylobar 0.99.0","title":"phylobar 0.99.0","text":"Initial Bioconductor submission.","code":""}]
