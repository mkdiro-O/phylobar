library(ape)
library(dplyr)
library(phylobar)
remotes::install_packages("mkdir-o/phylobar")
remotes::install_github("mkdir-o/phylobar")
remotes::install_packages("mkdir-o/phylobar")
install.packages("remotes")
remotes::install_packages("mkdir-o/phylobar")
remotes::install_packages("mkdir-o/phylobar")
remotes::install_github("mkdir-o/phylobar")
remotes::install_github("mkdiro-o/phylobar")
remotes::install_packages("mkdiro-o/phylobar")
library(ape)
library(dplyr)
library(phylobar)
library(readr)
library(tibble)
library(tidyr)
f <- tempfile()
cell_counts <- read_csv("~/Downloads/COVID_all_cells_metadata_complete.csv")
metadata <- read_csv("~/Downloads/final_sample_info.csv")
metadata
x <- cell_counts |>
dplyr::count(patient_id, majority_voting) |>
pivot_wider(names_from = majority_voting, values_from = n, values_fill = 0) |>
column_to_rownames("patient_id")
x <- x / rowSums(x)
edges_text <- "source,target
Multipotential hematopoietic stem cell (hemocytoblast),Common myeloid progenitor
Multipotential hematopoietic stem cell (hemocytoblast),Common lymphoid progenitor
Common myeloid progenitor,Megakaryocyte
Megakaryocyte,Platelet
Common myeloid progenitor,Erythrocyte
Erythrocyte,RBC
Common myeloid progenitor,Myeloblast
Myeloblast,Monocyte
Monocyte,CD14 Monocyte
Monocyte,CD16 Monocyte
Myeloblast,Eosinophil
Eosinophil,SC & Eosinophil
Myeloblast,DC
Myeloblast,pDC
Common lymphoid progenitor,NK
Common lymphoid progenitor,Small lymphocyte
Small lymphocyte,T lymphocyte
T lymphocyte,CD4 T
T lymphocyte,CD4m T
T lymphocyte,CD4n T
T lymphocyte,CD8m T
T lymphocyte,CD8eff T
T lymphocyte,gd T
Small lymphocyte,B lymphocyte
B lymphocyte,B
B lymphocyte,IgA PB
B lymphocyte,IgG PB"
edge <- read_csv(edges_text)
tips <- setdiff(edge$target, edge$source)
# preparation for phylo construction
internal_nodes <- setdiff(unlist(edge), tips)
node_order <- c(tips, internal_nodes)
ix <- setNames(seq_along(node_order), node_order)
# create phylo
tree <- list(
edge = matrix(c(ix[edge$source], ix[edge$target]), ncol = 2),
Nnode = length(internal_nodes),
tip.label = node_order[seq_along(tips)],
node.label = node_order[seq(length(tips) + 1, length(ix))]
)
class(tree) <- "phylo"
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
edges_text <- "source,target
Hematopoietic stem cell,Common myeloid progenitor
Hematopoietic stem cell,Common lymphoid progenitor
Common myeloid progenitor,Megakaryocyte
Megakaryocyte,Platelet
Common myeloid progenitor,RBC
Common myeloid progenitor,Myeloblast
Myeloblast,Monocyte
Monocyte,CD14 Monocyte
Monocyte,CD16 Monocyte
Myeloblast,SC & Eosinophil
Myeloblast,DC
Myeloblast,pDC
Common lymphoid progenitor,NK
Common lymphoid progenitor,Small lymphocyte
Small lymphocyte,T lymphocyte
T lymphocyte,CD4 T lymphocyte
T lymphocyte,CD8 T lymphocyte
CD4 T lymphocyte,CD4 T
CD4 T lymphocyte,CD4m T
CD4 T lymphocyte,CD4n T
CD8 T lymphocyte,CD8m T
CD8 T lymphocyte,CD8eff T
T lymphocyte,gd T
Small lymphocyte,B lymphocyte
B lymphocyte,B
B lymphocyte,IgA PB
B lymphocyte,IgG PB"
edge <- read_csv(edges_text)
tips <- setdiff(edge$target, edge$source)
# preparation for phylo construction
internal_nodes <- setdiff(unlist(edge), tips)
node_order <- c(tips, internal_nodes)
ix <- setNames(seq_along(node_order), node_order)
# create phylo
tree <- list(
edge = matrix(c(ix[edge$source], ix[edge$target]), ncol = 2),
Nnode = length(internal_nodes),
tip.label = node_order[seq_along(tips)],
node.label = node_order[seq(length(tips) + 1, length(ix))]
)
class(tree) <- "phylo"
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
md <- metadata |>
distinct(clinical_id, wos) |>
mutate(severity = factor(wos, levels = c("1", "1.5", "2", "3", "4", "5", "6", "7"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
patient_order <- md %>%
split(.$severity)
patient_order
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
})
md <- metadata |>
distinct(clinical_id, timepoint) |>
mutate(severity = factor(timepoint, levels = c("T1", "T2"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
md <- metadata |>
arrange(wos)
md
patient_order <- md$sample_id
phylobar(x[patient_order, ], tree)
patient_order
x
patient_order <- md$clinical_id
phylobar(x[patient_order, ], tree)
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
md <- metadata |>
arrange(wos)
patient_order <- md$clinical_id
phylobar(x[patient_order, ], tree)
library(seriation)
foo <- seriate(x)
foo
foo@
d
get_order(foo)
sort(get_order(foo))
x
?seriate
type(x)
class(x)
foo <- seriate(dist(x))
get_order(foo)
md <- metadata |>
arrange(wos)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[get_order(seriate(m))]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
?dist
?pdist
distance
?distance
install.packages("compositions")
x_transf <- compositions::clr(x)
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x_transf[ids, , drop = FALSE]
ids[get_order(seriate(m))]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x_transf[ids, , drop = FALSE]
ids[get_order(seriate(dist(m)))]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
x_transf
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x_transf[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
x_transf <- compositions::alr(x)
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x_transf[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
x_transf
x
metadata
x <- cell_counts |>
dplyr::count(patient_id, majority_voting) |>
pivot_wider(names_from = majority_voting, values_from = n, values_fill = 0) |>
column_to_rownames("patient_id")
x <- x / rowSums(x)
md <- metadata |>
distinct(clinical_id, severity) |>
mutate(severity = factor(severity, levels = c("mild", "moderate", "severe"))) |>
arrange(severity)
patient_order <- md %>%
split(.$severity) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
md <- metadata |>
distinct(clinical_id, wos) |>
arrange(wos)
patient_order <- md$clinical_id
phylobar(x[patient_order, ], tree)
\()
sdf
?`\`
?
?\
//
sdfa
sadf
|
)
}
{}
~
}}}}}}
\
``
`
phylobar(x[patient_order, ], tree)
phylobar(x[patient_order, ], tree)
phylobar(x[patient_order, ], tree)
metadata
md <- metadata |>
distinct(clinical_id, timepoint) |>
mutate(timepoint = factor(timepoint, levels = c("T1", "T2"))) |>
arrange(timepoint)
patient_order <- md %>%
split(.$timepoint) |>
lapply(\(df) {
ids <- df$clinical_id
m <- x[ids, , drop = FALSE]
ids[hclust(dist(m))$order]
}) |>
unlist(use.names = FALSE)
phylobar(x[patient_order, ], tree)
md <- metadata |>
distinct(clinical_id, age) |>
arrange(age)
patient_order <- md$clinical_id
phylobar(x[patient_order, ], tree)
devtools::check()
BiocManager::install("microbiome")
BiocManager::install("BiocStyle")
devtools::check()
BiocManager::install("DESeq2")
# install.packages("devtools")
devtools::install_github("https://github.com/SarithaKodikara/LUPINE")
install.packages("miaViz")
BiocManager::install("miaViz")
BiocManager::install("mixOmics")
# install.packages("devtools")
devtools::install_github("https://github.com/SarithaKodikara/LUPINE")
devtools::check()
BiocManager::install("MicrobiomeStat")
devtools::check()
devtools::build_site()
